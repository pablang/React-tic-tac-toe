{"version":3,"sources":["Avatar.js","Square.js","Board.js","Game.js","AvatarModal.js","index.js"],"names":["Avatar","props","className","avatar","onClick","Square","Board","i","j","this","squares","avatarX","avatarO","animate","win","rows","row","push","renderSquare","key","React","Component","Game","grid","Array","fill","slice","state","history","stepNumber","xIsNext","winGrid","current","length","k","calculateWinner","winCoor","m","c1","c2","c3","setState","concat","step","incrementGamesPlayed","winner","renderAvatar","O","X","renderStatus","handleClick","resetGame","AvatarModal","player","prevState","setPlayer","App","p1","p2","totalGamesPlayed","ReactDOM","render","document","getElementById"],"mappings":"mYAGe,SAASA,EAAOC,GAC7B,OACE,yBAAKC,UAAWD,EAAME,OACpBC,QAAS,WAAOH,EAAMG,aCFb,SAASC,EAAOJ,GAC7B,OACE,yBAAKC,UAAU,SACbE,QAAS,WAAOH,EAAMG,YAEnBH,EAAME,OACL,kBAAC,EAAD,CAAQA,OAAQF,EAAME,SAAa,I,UCNxBG,E,qLAENC,EAAEC,GAAI,IAAD,OACVL,EACuB,MAA7BM,KAAKR,MAAMS,QAAQH,GAAGC,GACtBC,KAAKR,MAAMU,QAAU,wBACQ,MAA7BF,KAAKR,MAAMS,QAAQH,GAAGC,GACtBC,KAAKR,MAAMW,QAAU,yBAA2B,GAE1CC,EAAUJ,KAAKR,MAAMa,IAAIP,GAAGC,GAAK,kBAAoB,GAE3D,OACE,kBAACH,EAAD,CACEF,OAAQA,EAASU,EACjBT,QAAS,kBAAM,EAAKH,MAAMG,QAAQG,EAAEC,Q,+BAOxC,IADA,IAAIO,EAAO,GACHR,EAAE,EAAGA,EAAE,EAAGA,IAAI,CAEpB,IADA,IAAIS,EAAM,GACFR,EAAE,EAAGA,EAAE,EAAGA,IAChBQ,EAAIC,KAAKR,KAAKS,aAAaX,EAAGC,IAEhCO,EAAKE,KAAK,yBAAKE,IAAKZ,EAAGL,UAAU,aAAvB,IAAqCc,EAArC,MAGZ,OACE,yBAAKd,UAAU,SACVa,O,GA/BwBK,IAAMC,WCCpBC,E,YACnB,aAAc,IAAD,sBACX,8CAGA,IAFA,IAAIC,EAAO,GACPT,EAAM,GACFP,EAAE,EAAGA,EAAE,EAAGA,IAAI,CACpB,IAAIS,EAAMQ,MAAM,GAAGC,KAAK,MACxBF,EAAKN,KAAKD,GACVF,EAAIG,KAAKD,EAAIU,SAPJ,OAUX,EAAKC,MAAQ,CACXC,QAAS,CAAC,CACRlB,QAASa,IAEXM,WAAY,EACZC,SAAS,EACTC,QAASjB,GAhBA,E,yEAoBDP,EAAEC,GAIZ,IAHA,IAAMoB,EAAUnB,KAAKkB,MAAMC,QAAQF,MAAM,EAAGjB,KAAKkB,MAAME,WAAa,GAC9DG,EAAUJ,EAAQA,EAAQK,OAAS,GACnCvB,EAAU,GACRwB,EAAE,EAAGA,EAAE,EAAGA,IAChBxB,EAAQO,KAAKe,EAAQtB,QAAQwB,GAAGR,SAElC,IAAGS,EAAgBzB,KAAYA,EAAQH,GAAGC,GAA1C,CAGAE,EAAQH,GAAGC,GAAKC,KAAKkB,MAAMG,QAAU,IAAM,IAC3C,IAAIM,EAAUD,EAAgBzB,GAC9B,GAAG0B,EAAQ,CAGT,IADA,IAAItB,EAAM,GACFuB,EAAE,EAAGA,EAAE,EAAGA,IAAI,CACpB,IAAIrB,EAAMQ,MAAM,GAAGC,KAAK,MACxBX,EAAIG,KAAKD,GAEX,IAAMsB,EAAKF,EAAQ,GACbG,EAAKH,EAAQ,GACbI,EAAKJ,EAAQ,GAEnBtB,EAAIwB,EAAG,IAAIA,EAAG,IAAM,EACpBxB,EAAIyB,EAAG,IAAIA,EAAG,IAAM,EACpBzB,EAAI0B,EAAG,IAAIA,EAAG,IAAM,EAEpB/B,KAAKgC,SAAS,CAACV,QAASjB,IAG1BL,KAAKgC,SAAS,CACZb,QAAUA,EAAQc,OAAO,CAAC,CACxBhC,QAASA,KAEXoB,SAAUrB,KAAKkB,MAAMG,QACrBD,WAAYD,EAAQK,Y,mCAKX9B,GAEX,OACE,kBAAC,EAAD,CAAQA,OAAQA,M,gCAIVwC,GAGR,IADA,IAAI7B,EAAM,GACFuB,EAAE,EAAGA,EAAE,EAAGA,IAAI,CACpB,IAAIrB,EAAMQ,MAAM,GAAGC,KAAK,MACxBX,EAAIG,KAAKD,GAEXP,KAAKR,MAAM2C,uBACXnC,KAAKgC,SAAS,CACZZ,WAAYc,EACZb,UAAUa,EAAO,GACjBZ,QAASjB,M,mCAIA+B,GACX,OAAIA,EAGA,yBAAK3C,UAAU,UACb,8CACCO,KAAKkB,MAAMG,QAAUrB,KAAKqC,aAAarC,KAAKR,MAAM8C,GAAKtC,KAAKqC,aAAarC,KAAKR,MAAM+C,IAIvF,yBAAK9C,UAAU,UACb,8CACCO,KAAKkB,MAAMG,QAAUrB,KAAKqC,aAAarC,KAAKR,MAAM+C,GAAKvC,KAAKqC,aAAarC,KAAKR,MAAM8C,M,+BAMnF,IAAD,OAEDf,EADUvB,KAAKkB,MAAMC,QACHnB,KAAKkB,MAAME,YAC7BgB,EAASV,EAAgBH,EAAQtB,SAEvC,OACE,yBAAKR,UAAU,QACb,yBAAKA,UAAU,cAEb,yBAAKA,UAAU,aACZO,KAAKwC,aAAaJ,IAErB,kBAAC,EAAD,CACEnC,QAASsB,EAAQtB,QACjBN,QAAS,SAACG,EAAEC,GAAH,OAAS,EAAK0C,YAAY3C,EAAEC,IACrCG,QAASF,KAAKR,MAAM+C,EACpBpC,QAASH,KAAKR,MAAM8C,EACpBjC,IAAKL,KAAKkB,MAAMI,WAGpB,4BAAQ7B,UAAU,QAAQE,QAAS,kBAAM,EAAK+C,UAAU,KAAxD,oB,GAzH0B/B,IAAMC,WA+HxC,SAASc,EAAgBzB,GAGvB,IAAK,IAAIH,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAIG,EAAQH,GAAG,IAAMG,EAAQH,GAAG,KAAOG,EAAQH,GAAG,IAAMG,EAAQH,GAAG,KAAOG,EAAQH,GAAG,GACnF,MAAO,CAAC,CAACA,EAAG,GAAI,CAACA,EAAG,GAAI,CAACA,EAAG,IAKhC,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAIE,EAAQ,GAAGF,IAAME,EAAQ,GAAGF,KAAOE,EAAQ,GAAGF,IAAME,EAAQ,GAAGF,KAAOE,EAAQ,GAAGF,GACnF,MAAO,CAAC,CAAC,EAAGA,GAAI,CAAC,EAAGA,GAAI,CAAC,EAAGA,IAKhC,OAAIE,EAAQ,GAAG,IAAMA,EAAQ,GAAG,KAAOA,EAAQ,GAAG,IAAMA,EAAQ,GAAG,KAAOA,EAAQ,GAAG,GAC1E,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAG5BA,EAAQ,GAAG,IAAMA,EAAQ,GAAG,KAAOA,EAAQ,GAAG,IAAMA,EAAQ,GAAG,KAAOA,EAAQ,GAAG,GAC1E,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAGzB,K,IC1JY0C,E,2MAEnBzB,MAAQ,CACNgB,KAAM,G,4EAGKxC,EAAQkD,GAAQ,IAAD,OAC1B,OACE,kBAAC,EAAD,CAAQlD,OAAQA,EAChBC,QAAS,WACP,EAAKqC,UAAS,SAAAa,GAAS,MAAK,CAAEX,KAAMW,EAAUX,KAAO,MACrD,EAAK1C,MAAMsD,UAAUpD,EAAQkD,Q,+BAOjC,OACE5C,KAAKkB,MAAMgB,KAAO,EACjB,6BAASzC,UAAU,iBAClB,2DAAiCO,KAAKkB,MAAMgB,MAC5C,yBAAKzC,UAAU,oBACZO,KAAKqC,aAAa,OAAQrC,KAAKkB,MAAMgB,MACrClC,KAAKqC,aAAa,YAAarC,KAAKkB,MAAMgB,MAC1ClC,KAAKqC,aAAa,UAAWrC,KAAKkB,MAAMgB,QAE/B,O,GA3BqBvB,IAAMC,WCMzCmC,E,2MAEJ7B,MAAQ,CACN8B,GAAI,GACJC,GAAI,GACJC,iBAAkB,G,EAIpBJ,UAAY,SAACpD,EAAQkD,GACL,IAAXA,EACD,EAAKZ,SAAS,CAAEgB,GAAItD,IACD,IAAXkD,GACR,EAAKZ,SAAS,CAAEiB,GAAIvD,K,EAIxByC,qBAAuB,WACrB,EAAKH,UAAS,SAAAa,GACZ,MAAO,CAACK,iBAAkBL,EAAUK,iBAAmB,O,wEAIlD,MAEUlD,KAAKkB,MAAf8B,EAFA,EAEAA,GAAIC,EAFJ,EAEIA,GACX,OACE,yBAAKxD,UAAU,kBACb,wBAAIA,UAAU,eAAd,eACA,kBAAC,EAAD,CAAaqD,UAAW9C,KAAK8C,YAGT,KAAlB9C,KAAKkB,MAAM8B,IAA+B,KAAlBhD,KAAKkB,MAAM+B,GACnC,6BACE,sCAAYjD,KAAKkB,MAAMgC,kBACvB,kBAAC,EAAD,CAAMX,EAAGS,EAAIV,EAAGW,EAAId,qBAAsBnC,KAAKmC,wBAE/C,Q,GArCMxB,IAAMC,WA8CxBuC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c4b0a1e9.chunk.js","sourcesContent":["import React from 'react'\nimport './Avatar.css'\n\nexport default function Avatar(props) {\n  return (\n    <div className={props.avatar}\n      onClick={() => {props.onClick()}}>\n    </div>\n  );\n}","import React from 'react'\nimport './App.css'\nimport Avatar from './Avatar'\n\nexport default function Square(props) {\n  return (\n    <div className=\"square\"\n      onClick={() => {props.onClick();\n      }}>\n        {props.avatar ?\n          <Avatar avatar={props.avatar} /> : ''\n        }\n    </div>\n  );\n}\n","import React from 'react'\nimport Square from './Square'\nimport './Board.css'\n\nexport default class Board extends React.Component {\n\n  renderSquare(i,j) {\n    const avatar =\n    this.props.squares[i][j] === 'X' ?\n    this.props.avatarX + \" roll-in-blurred-left\" :\n    this.props.squares[i][j] === 'O' ?\n    this.props.avatarO + \" roll-in-blurred-right\" : ''\n    debugger\n    const animate = this.props.win[i][j] ? ' jello-vertical' : ''\n\n    return (\n      <Square\n        avatar={avatar + animate}\n        onClick={() => this.props.onClick(i,j)}\n     />\n    );\n  }\n\n  render() {\n    var rows = [];\n    for(var i=0; i<3; i++){\n      var row = [];\n      for(var j=0; j<3; j++){\n        row.push(this.renderSquare(i, j));\n      }\n      rows.push(<div key={i} className=\"board-row\"> {row} </div>);\n    }\n\n    return (\n      <div className=\"board\">\n          {rows}\n\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './Game.css';\nimport Board from './Board.js'\nimport Avatar from './Avatar'\n\nexport default class Game extends React.Component {\n  constructor(){\n    super();\n    let grid = [];\n    let win = [];\n    for(let i=0; i<3; i++){\n      let row = Array(3).fill(null);\n      grid.push(row);\n      win.push(row.slice());\n    }\n\n    this.state = {\n      history: [{\n        squares: grid,\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      winGrid: win,\n    };\n  }\n\n  handleClick(i,j) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = [];\n    for(let k=0; k<3; k++){\n      squares.push(current.squares[k].slice());\n    }\n    if(calculateWinner(squares) || squares[i][j]){\n      return;\n    }\n    squares[i][j] = this.state.xIsNext ? 'X' : 'O';\n    var winCoor = calculateWinner(squares);\n    if(winCoor){\n      // ie [[0,0], [1,1], [2,2]]\n      let win = [];\n      for(let m=0; m<3; m++){\n        let row = Array(3).fill(null);\n        win.push(row);\n      }\n      const c1 = winCoor[0];\n      const c2 = winCoor[1];\n      const c3 = winCoor[2];\n\n      win[c1[0]][c1[1]] = 1;\n      win[c2[0]][c2[1]] = 1;\n      win[c3[0]][c3[1]] = 1;\n\n      this.setState({winGrid: win});\n    }\n\n    this.setState({\n      history : history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n    });\n  }\n\n\n  renderAvatar(avatar) {\n\n    return (\n      <Avatar avatar={avatar}/>\n    )\n  }\n\n  resetGame(step){\n\n    let win = [];\n    for(let m=0; m<3; m++){\n      let row = Array(3).fill(null);\n      win.push(row);\n    }\n    this.props.incrementGamesPlayed()\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) ? false : true,\n      winGrid: win\n    });\n  }\n\n  renderStatus(winner){\n    if (winner) {\n\n      return (\n        <div className=\"status\">\n          <h3>The winner is </h3>\n          {this.state.xIsNext ? this.renderAvatar(this.props.O) : this.renderAvatar(this.props.X)}\n        </div>)\n    } else {\n      return (\n        <div className=\"status\">\n          <h3>It's your turn</h3>\n          {this.state.xIsNext ? this.renderAvatar(this.props.X) : this.renderAvatar(this.props.O)}\n        </div>\n      )\n    }\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n\n          <div className=\"game-info\">\n            {this.renderStatus(winner)}\n          </div>\n          <Board\n            squares={current.squares}\n            onClick={(i,j) => this.handleClick(i,j)}\n            avatarX={this.props.X}\n            avatarO={this.props.O}\n            win={this.state.winGrid}\n          />\n        </div>\n        <button className=\"reset\" onClick={() => this.resetGame(0)}>Play Again!</button>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n\n  // check row\n  for (let i = 0; i < 3; i++) {\n    if (squares[i][0] && squares[i][0] === squares[i][1] && squares[i][0] === squares[i][2]) {\n      return [[i, 0], [i, 1], [i, 2]]\n    }\n  }\n\n  // check column\n  for (let j = 0; j < 3; j++) {\n    if (squares[0][j] && squares[0][j] === squares[1][j] && squares[0][j] === squares[2][j]) {\n      return [[0, j], [1, j], [2, j]];\n    }\n  }\n\n  // check diagonals\n  if (squares[0][0] && squares[0][0] === squares[1][1] && squares[0][0] === squares[2][2]) {\n      return [[0, 0], [1, 1], [2, 2]];\n  }\n\n  if (squares[2][0] && squares[2][0] === squares[1][1] && squares[2][0] === squares[0][2]) {\n      return [[2, 0], [1, 1], [0, 2]];\n  }\n\n  return null;\n}","import React from 'react';\nimport Avatar from './Avatar'\n\nexport default class AvatarModal extends React.Component {\n\n  state = {\n    step: 1\n  }\n\n  renderAvatar(avatar, player){\n    return (\n      <Avatar avatar={avatar}\n      onClick={() => {\n        this.setState(prevState => ({ step: prevState.step + 1 }))\n        this.props.setPlayer(avatar, player)\n      }}\n      />\n    );\n  }\n\n  render() {\n    return (\n      this.state.step < 3 ?\n      (<section className=\"choose-avatar\">\n        <h3>Choose an avatar for player {this.state.step}</h3>\n        <div className=\"avatar-container\">\n          {this.renderAvatar('Duke', this.state.step)}\n          {this.renderAvatar('Valentina', this.state.step)}\n          {this.renderAvatar('Frankie', this.state.step)}\n        </div>\n      </section>) : ''\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './skeleton.css';\n// import Avatar from './Avatar'\nimport Game from './Game'\nimport AvatarModal from './AvatarModal'\n\n\nclass App extends React.Component {\n\n  state = {\n    p1: \"\",\n    p2: \"\",\n    totalGamesPlayed: 1,\n\n  }\n\n  setPlayer = (avatar, player) => {\n    if(player === 1) {\n      this.setState({ p1: avatar})\n    } else if(player === 2) {\n      this.setState({ p2: avatar})\n    }\n  }\n\n  incrementGamesPlayed = () => {\n    this.setState(prevState => {\n      return {totalGamesPlayed: prevState.totalGamesPlayed + 1}\n   });\n  }\n\n  render() {\n    // console.log(\"render index\")\n    const {p1, p2} = this.state\n    return (\n      <div className=\"main-conatiner\">\n        <h1 className=\"center-text\">TIC-TAC-TOE</h1>\n        <AvatarModal setPlayer={this.setPlayer}/>\n\n        {\n          this.state.p1 !== '' && this.state.p2 !== '' ?\n          <div>\n            <h3>Round: {this.state.totalGamesPlayed}</h3>\n            <Game X={p1} O={p2} incrementGamesPlayed={this.incrementGamesPlayed}/>\n          </div>\n          : ''\n        }\n      </div>\n    )\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}